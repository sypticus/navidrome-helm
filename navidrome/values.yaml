replicaCount: 1

image:
  repository: deluan/navidrome
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 4533
  loadBalancerIP:

musicFolder: '/music'  #all music pvcs should be mounted as subdirs of this folder
dataFolder: "/data"  #Where to store application data
cacheFolder: "/cache" #Cache data (transcoding, imagesâ€¦)


persistence:
  enabled: false
  appData:
    #existingClaim: #Existing PVC to store app data on. Will be created if this field is empty
    pvcSize: 10G
    storageClassName: ""
    accessMode: ReadWriteOnce

  music:
    #existingClaim:  #Existing PVCs with music. One will be created if this field is empty
    pvcSize: 30G #Size of new PVC for music
    storageClassName: ""
    accessMode: ReadWriteOnce
    mountPath: "/music/library"

  # Additional volumes to mount
  additionalVolumes: [ ]
  # - name: foo-music
#     persistentVolumeClaim:
#      claimName: "more-music"


  # Additional volumeMounts. Make sure they are mounted to the musicFolder if thats what they are.
  additionalVolumeMounts: [ ]
  # - name: foo-music
  #   mountPath: "/music/foo"
  #   readOnly: true



logLevel: "info"
enableInsightsCollector: true #Controls whether the server will run its Anonymous Data Collection feature to help improve the project.	true

advancedConfiguration:  #A list of environment variables which can be overridden. See https://www.navidrome.org/docs/usage/configuration-options/
#  - name: ND_ENABLEDOWNLOADS
#    value: "true"
#  - name: ND_ENABLESHARING
#    value: "false"
    #...


livenessProbe:
  enabled: false
  httpGet:
    path: /
    port: http
readinessProbe:
  enabled: false
  httpGet:
    path: /
    port: http



serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}

securityContext: {}


# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


nodeSelector: {}

tolerations: []

affinity: {}
